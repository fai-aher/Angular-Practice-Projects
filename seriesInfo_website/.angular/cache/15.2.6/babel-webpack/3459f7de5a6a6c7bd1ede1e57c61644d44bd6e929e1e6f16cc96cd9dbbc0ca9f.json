{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../series.service\";\nimport * as i2 from \"@angular/common\";\nfunction ListarSeriesComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const serie_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(serie_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(serie_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(serie_r1.channel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(serie_r1.seasons);\n  }\n}\nexport class ListarSeriesComponent {\n  constructor(seriesService) {\n    this.seriesService = seriesService;\n    this.series = [];\n    this.averageSeasons = 0;\n  }\n  ngOnInit() {\n    this.seriesService.getSeries().subscribe(data => {\n      this.series = data;\n      this.calculateAverageSeasons();\n    });\n  }\n  // Function to calculate average seasons.\n  calculateAverageSeasons() {\n    let totalSeasons = 0;\n    for (const serie of this.series) {\n      totalSeasons += serie.seasons;\n    }\n    this.averageSeasons = totalSeasons / this.series.length;\n  }\n}\nListarSeriesComponent.ɵfac = function ListarSeriesComponent_Factory(t) {\n  return new (t || ListarSeriesComponent)(i0.ɵɵdirectiveInject(i1.SeriesService));\n};\nListarSeriesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListarSeriesComponent,\n  selectors: [[\"app-listar-series\"]],\n  decls: 19,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mt-4\"]],\n  template: function ListarSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Listado de Series\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Canal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Temporadas\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, ListarSeriesComponent_tr_15_Template, 9, 4, \"tr\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"p\", 3);\n      i0.ɵɵtext(17);\n      i0.ɵɵpipe(18, \"number\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.series);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Promedio de temporadas de todas las series: \", i0.ɵɵpipeBind2(18, 2, ctx.averageSeasons, \"1.2-2\"), \"\");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.DecimalPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAYQA,0BAAiC;IAC3BA,YAAY;IAAAA,iBAAK;IACrBA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;;;;IAHtBA,eAAY;IAAZA,iCAAY;IACZA,eAAc;IAAdA,mCAAc;IACdA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAiB;IAAjBA,sCAAiB;;;ACN/B,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAHjC,WAAM,GAAY,EAAE;IACpB,mBAAc,GAAW,CAAC;EAEyB;EAEnDC,QAAQ;IACN,IAAI,CAACD,aAAa,CAACE,SAAS,EAAE,CAACC,SAAS,CAAEC,IAAa,IAAI;MACzD,IAAI,CAACC,MAAM,GAAGD,IAAI;MAClB,IAAI,CAACE,uBAAuB,EAAE;IAChC,CAAC,CAAC;EACJ;EAEA;EACAA,uBAAuB;IACrB,IAAIC,YAAY,GAAG,CAAC;IACpB,KAAK,MAAMC,KAAK,IAAI,IAAI,CAACH,MAAM,EAAE;MAC/BE,YAAY,IAAIC,KAAK,CAACC,OAAO;;IAE/B,IAAI,CAACC,cAAc,GAAGH,YAAY,GAAG,IAAI,CAACF,MAAM,CAACM,MAAM;EACzD;;AApBWb,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVlCnB,8BAAuB;MACfA,iCAAiB;MAAAA,iBAAK;MAC1BA,gCAAmC;MAGzBA,kBAAE;MAAAA,iBAAK;MACXA,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MAGvBA,8BAAO;MACLA,sEAKK;MACPA,iBAAQ;MAIZA,6BAAgB;MAAAA,aAAiF;;MAAAA,iBAAI;;;MAVzEA,gBAAS;MAATA,oCAAS;MAUrBA,eAAiF;MAAjFA,6HAAiF","names":["i0","ListarSeriesComponent","constructor","seriesService","ngOnInit","getSeries","subscribe","data","series","calculateAverageSeasons","totalSeasons","serie","seasons","averageSeasons","length","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\ASUS\\Desktop\\Angular-Practice-Projects\\seriesInfo_website\\src\\app\\series\\listar-series\\listar-series.component.html","C:\\Users\\ASUS\\Desktop\\Angular-Practice-Projects\\seriesInfo_website\\src\\app\\series\\listar-series\\listar-series.component.ts"],"sourcesContent":["<div class=\"container\">\r\n    <h2>Listado de Series</h2>\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nombre</th>\r\n          <th>Canal</th>\r\n          <th>Temporadas</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let serie of series\">\r\n          <td>{{serie.id}}</td>\r\n          <td>{{serie.name}}</td>\r\n          <td>{{serie.channel}}</td>\r\n          <td>{{serie.seasons}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <p class=\"mt-4\">Promedio de temporadas de todas las series: {{ averageSeasons | number:'1.2-2' }}</p>\r\n\r\n  \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Serie } from '../serie';\r\nimport { SeriesService } from '../series.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-listar-series',\r\n  templateUrl: './listar-series.component.html',\r\n  styleUrls: ['./listar-series.component.css']\r\n})\r\nexport class ListarSeriesComponent implements OnInit {\r\n  series: Serie[] = [];\r\n  averageSeasons: number = 0;\r\n\r\n  constructor(private seriesService: SeriesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.seriesService.getSeries().subscribe((data: Serie[]) => {\r\n      this.series = data;\r\n      this.calculateAverageSeasons();\r\n    });\r\n  }\r\n\r\n  // Function to calculate average seasons.\r\n  calculateAverageSeasons(): void {\r\n    let totalSeasons = 0;\r\n    for (const serie of this.series) {\r\n      totalSeasons += serie.seasons;\r\n    }\r\n    this.averageSeasons = totalSeasons / this.series.length;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}